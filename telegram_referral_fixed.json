{
  "name": "telegram_referral",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "*"
        ],
        "additionalFields": {}
      },
      "id": "20e44c7c-8d0d-4f1b-b68b-0ad461b1b3cf",
      "name": "Telegram Bot Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -1472,
        160
      ],
      "webhookId": "a8f72b4f-fe8a-421b-92dc-2760bade6a0d",
      "credentials": {
        "telegramApi": {
          "id": "aQPWWr9avNBWkLbc",
          "name": "Telegram account 4"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "id-1",
              "name": "channelLink",
              "value": "https://t.me/YOUR_CHANNEL",
              "type": "string"
            },
            {
              "id": "id-2",
              "name": "botUsername",
              "value": "YOUR_BOT_USERNAME",
              "type": "string"
            },
            {
              "id": "id-3",
              "name": "spreadsheetId",
              "value": "YOUR_GOOGLE_SHEET_ID",
              "type": "string"
            },
            {
              "id": "id-4",
              "name": "sheetName",
              "value": "Users",
              "type": "string"
            },
            {
              "id": "id-5",
              "name": "allowedParticipants",
              "value": "={{ [\"123456789\", \"987654321\", \"111222333\", \"444555666\", \"777888999\", \"100200300\", \"400500600\", \"700800900\"] }}",
              "type": "object"
            },
            {
              "id": "id-6",
              "name": "bonusThreshold",
              "value": 5,
              "type": "number"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "ff7b069f-3368-4db3-bae1-e4e6156eae77",
      "name": "Workflow Configuration",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1248,
        160
      ]
    },
    {
      "parameters": {
        "jsCode": "// Parse Telegram message and extract relevant data\nconst items = $input.all();\nconst outputItems = [];\n\nfor (const item of items) {\n  const message = item.json.message || {};\n  const from = message.from || {};\n  const chat = message.chat || {};\n  const text = message.text || '';\n  \n  // Extract user information\n  const user_id = String(from.id);\n  const username = from.username || from.first_name || 'Unknown';\n  const chat_id = String(chat.id);\n  \n  // Get allowed participants list\n  const config = $('Workflow Configuration').first().json;\n  const allowedParticipants = config.allowedParticipants || [];\n  const isParticipant = allowedParticipants.includes(user_id);\n  \n  // Extract referral parameter from /start command\n  let referral_code = null;\n  let referrer_id = null;\n  \n  if (text.startsWith('/start')) {\n    const parts = text.split(' ');\n    if (parts.length > 1) {\n      referral_code = parts[1];\n      // Extract referrer ID from ref_123456 format\n      if (referral_code.startsWith('ref_')) {\n        referrer_id = referral_code.replace('ref_', '');\n      }\n    }\n  }\n  \n  // Extract command if present\n  let command = null;\n  if (text.startsWith('/')) {\n    command = text.split(' ')[0].substring(1);\n  }\n  \n  outputItems.push({\n    json: {\n      user_id: user_id,\n      username: username,\n      chat_id: chat_id,\n      message_text: text,\n      referral_code: referral_code,\n      referrer_id: referrer_id,\n      command: command,\n      is_referral: referrer_id !== null,\n      is_participant: isParticipant,\n      original_message: message\n    }\n  });\n}\n\nreturn outputItems;"
      },
      "id": "8715a928-eb2a-407e-8c8b-2e4392561a20",
      "name": "Parse Telegram Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1024,
        160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "id-1",
              "leftValue": "={{ $json.command }}",
              "rightValue": "start",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a358b036-a13e-424d-8cfb-e921d4c7ca9e",
      "name": "Check If Start Command",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -816,
        64
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Workflow Configuration').first().json.spreadsheetId }}"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Workflow Configuration').first().json.sheetName }}"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "user_id",
              "lookupValue": "={{ $('Parse Telegram Message').first().json.user_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9b3ac08d-4c78-42f7-a00f-a43b70cd05bb",
      "name": "Check User Exists",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -576,
        48
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "FkYqUgEFigk9KtyZ",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "id-1",
              "leftValue": "={{ $json.length }}",
              "rightValue": "0",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b0841556-ae89-4fb6-b937-66a447b86e44",
      "name": "Check If New User",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -352,
        48
      ]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Workflow Configuration').first().json.spreadsheetId }}"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Workflow Configuration').first().json.sheetName }}"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "user_id": "={{ $('Parse Telegram Message').first().json.user_id }}",
            "username": "={{ $('Parse Telegram Message').first().json.username }}",
            "chat_id": "={{ $('Parse Telegram Message').first().json.chat_id }}",
            "invited_by": "={{ $('Parse Telegram Message').first().json.referrer_id || '' }}",
            "join_date": "={{ $now.toISO() }}",
            "total_invites": "0",
            "is_participant": "={{ $('Parse Telegram Message').first().json.is_participant }}",
            "reward_sent": "false"
          },
          "matchingColumns": [
            "user_id"
          ],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "username",
              "displayName": "username",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "invited_by",
              "displayName": "invited_by",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "join_date",
              "displayName": "join_date",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "total_invites",
              "displayName": "total_invites",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "is_participant",
              "displayName": "is_participant",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "reward_sent",
              "displayName": "reward_sent",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "c0bbd2c4-2095-4abd-b4bd-4abca4c51fb3",
      "name": "Add New User",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -128,
        32
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "FkYqUgEFigk9KtyZ",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Parse Telegram Message').first().json.chat_id }}",
        "text": "=Вітаємо! Ви успішно приєдналися. 🎉\n\nПриєднуйтесь до нашого каналу:\n{{ $('Workflow Configuration').first().json.channelLink }}",
        "additionalFields": {}
      },
      "id": "7a3d1953-edca-4748-8c5f-c2acd261df87",
      "name": "Send Welcome Message",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        96,
        32
      ],
      "webhookId": "59c3125a-dbf8-43f7-b233-8957bd09e7db",
      "credentials": {
        "telegramApi": {
          "id": "aQPWWr9avNBWkLbc",
          "name": "Telegram account 4"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "id-1",
              "leftValue": "={{ $('Parse Telegram Message').first().json.referrer_id }}",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8033f06b-a245-4d70-8414-211608b59b16",
      "name": "Check If Has Referrer",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        320,
        32
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Workflow Configuration').first().json.spreadsheetId }}"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Workflow Configuration').first().json.sheetName }}"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "user_id",
              "lookupValue": "={{ $('Parse Telegram Message').first().json.referrer_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "326c7f83-1622-4a13-8b21-899c0dbb0206",
      "name": "Get Referrer Data",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        544,
        16
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "FkYqUgEFigk9KtyZ",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Calculate new invite count with protection against self-referral\nconst items = $input.all();\n\nif (items.length === 0) {\n  // Referrer not found\n  return [];\n}\n\nconst referrer = items[0].json;\nconst newUserId = $('Parse Telegram Message').first().json.user_id;\n\n// 🛡️ ЗАЩИТА ОТ САМОЗАПРОШЕННЯ\nif (referrer.user_id === newUserId) {\n  console.log('⛔️ Self-referral attempt blocked');\n  return [];\n}\n\n// Check if referrer is a participant\nconst isParticipant = referrer.is_participant === 'true' || referrer.is_participant === true;\n\nif (!isParticipant) {\n  // Referrer is not a participant, don't count invite\n  console.log('⛔️ Referrer is not a participant');\n  return [];\n}\n\nconst currentInvites = parseInt(referrer.total_invites) || 0;\nconst newInvites = currentInvites + 1;\n\nreturn [{\n  json: {\n    user_id: referrer.user_id,\n    chat_id: referrer.chat_id,\n    username: referrer.username,\n    total_invites: newInvites,\n    previous_invites: currentInvites,\n    is_participant: isParticipant,\n    reward_sent: referrer.reward_sent\n  }\n}];"
      },
      "id": "5e9edd7a-d513-4ea7-8666-e2c6965d0933",
      "name": "Calculate New Invites",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -560,
        -192
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Workflow Configuration').first().json.spreadsheetId }}"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Workflow Configuration').first().json.sheetName }}"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "user_id": "={{ $json.user_id }}",
            "total_invites": "={{ $json.total_invites }}"
          },
          "matchingColumns": [
            "user_id"
          ],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "total_invites",
              "displayName": "total_invites",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": false
            }
          ]
        },
        "options": {}
      },
      "id": "ca4fa48f-b882-4e55-a618-74dc4f2b6997",
      "name": "Update Referrer Count",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -336,
        -192
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "FkYqUgEFigk9KtyZ",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "🎉 +1 запрошення! Ви запросили нового користувача.\n\nВсього запрошень: {{ $json.total_invites }}\n\n🏆 Ви берете участь у змаганні!",
        "additionalFields": {}
      },
      "id": "2a04c680-77e5-4b4e-aa11-9e1543fe3534",
      "name": "Notify Referrer",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -96,
        -192
      ],
      "webhookId": "a039ec33-b53d-4ef0-931d-c4b1c91a2adb",
      "credentials": {
        "telegramApi": {
          "id": "aQPWWr9avNBWkLbc",
          "name": "Telegram account 4"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "id-1",
              "leftValue": "={{ $json.total_invites }}",
              "rightValue": "={{ $('Workflow Configuration').first().json.bonusThreshold }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            },
            {
              "id": "id-2",
              "leftValue": "={{ $json.reward_sent }}",
              "rightValue": "false",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a4ccc154-9ebc-4f7d-873d-c973788d9b31",
      "name": "Check If Bonus Eligible",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        112,
        -192
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "🎉🎉🎉 ВІТАЄМО! 🎉🎉🎉\n\nВи досягли {{ $('Workflow Configuration').first().json.bonusThreshold }} запрошень і отримуєте спеціальний бонус!\n\nДякуємо за вашу активність! 🌟",
        "additionalFields": {}
      },
      "id": "1a24985f-e0db-4da2-be92-a64258c93779",
      "name": "Send Bonus Message",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        352,
        -208
      ],
      "webhookId": "a47d4458-75c9-40dc-b570-b384380b4a18",
      "credentials": {
        "telegramApi": {
          "id": "aQPWWr9avNBWkLbc",
          "name": "Telegram account 4"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Workflow Configuration').first().json.spreadsheetId }}"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Workflow Configuration').first().json.sheetName }}"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "user_id": "={{ $json.user_id }}",
            "reward_sent": "true"
          },
          "matchingColumns": [
            "user_id"
          ],
          "schema": [
            {
              "id": "user_id",
              "displayName": "user_id",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "reward_sent",
              "displayName": "reward_sent",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": false
            }
          ]
        },
        "options": {}
      },
      "id": "7335e1ef-47ef-4b8a-be2f-5fdc8e5d2fac",
      "name": "Mark Reward Sent",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        544,
        -208
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "FkYqUgEFigk9KtyZ",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "id-1",
              "leftValue": "={{ $json.command }}",
              "rightValue": "myref",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7becd06d-ca18-4807-9b2e-cb6f23831542",
      "name": "Check If MyRef Command",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -592,
        304
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "id-1",
              "leftValue": "={{ $('Parse Telegram Message').first().json.is_participant }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "29c3ae5f-468a-40a7-bc97-ba1683f8f73f",
      "name": "Check If Participant MyRef",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -352,
        288
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Workflow Configuration').first().json.spreadsheetId }}"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Workflow Configuration').first().json.sheetName }}"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "user_id",
              "lookupValue": "={{ $('Parse Telegram Message').first().json.user_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "18c3c93d-b9b3-4afc-9ee2-cd24d77d4886",
      "name": "Get User Stats",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -128,
        272
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "FkYqUgEFigk9KtyZ",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Parse Telegram Message').first().json.chat_id }}",
        "text": "=🏆 *Ваша статистика у змаганні*\n\n👤 Ім'я: {{ $json.username }}\n👥 Запрошень: *{{ $json.total_invites }}*\n📅 Дата приєднання: {{ $json.join_date.split('T')[0] }}\n{{ $json.reward_sent === 'true' ? '🎁 Бонус отримано!' : '' }}\n\n🔗 *Ваше реферальне посилання:*\n`https://t.me/{{ $('Workflow Configuration').first().json.botUsername }}?start=ref_{{ $json.user_id }}`\n\n💡 Запросіть якомога більше людей!\n\n📊 Команди:\n/myref - Моя статистика\n/top - Топ учасників змагання",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "82560ea7-535e-4929-816b-43aee51f7cc0",
      "name": "Send My Stats",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        96,
        272
      ],
      "webhookId": "4ca2c82c-7a45-4f34-967b-d5f3d7020958",
      "credentials": {
        "telegramApi": {
          "id": "aQPWWr9avNBWkLbc",
          "name": "Telegram account 4"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Parse Telegram Message').first().json.chat_id }}",
        "text": "⛔️ Ця команда доступна тільки учасникам змагання.",
        "additionalFields": {}
      },
      "id": "d86994ba-a41f-4c34-bc34-d4b79ebc5e92",
      "name": "Not Participant MyRef",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -128,
        416
      ],
      "webhookId": "not-participant-myref-webhook",
      "credentials": {
        "telegramApi": {
          "id": "aQPWWr9avNBWkLbc",
          "name": "Telegram account 4"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "id-1",
              "leftValue": "={{ $json.command }}",
              "rightValue": "top",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ecbcbefd-a04a-4b97-aa28-41dc0e4d2a87",
      "name": "Check If Top Command",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -560,
        672
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "id-1",
              "leftValue": "={{ $('Parse Telegram Message').first().json.is_participant }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "864a45fc-a905-47d8-9f96-a44b1fc01502",
      "name": "Check If Participant Top",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -336,
        656
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Workflow Configuration').first().json.spreadsheetId }}"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Workflow Configuration').first().json.sheetName }}"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "is_participant",
              "lookupValue": "true"
            }
          ]
        },
        "options": {
          "dataLocationOnSheet": {
            "values": {
              "rangeDefinition": "detectAutomatically"
            }
          }
        }
      },
      "id": "bb1ae256-838c-4427-a5cd-709299112812",
      "name": "Get Participants Only",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -112,
        608
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "FkYqUgEFigk9KtyZ",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Sort and format leaderboard for participants only\nconst items = $input.all();\n\n// Sort by total_invites descending\nconst sortedUsers = items\n  .map(item => item.json)\n  .filter(user => user.is_participant === 'true' || user.is_participant === true)\n  .sort((a, b) => {\n    const aInvites = parseInt(a.total_invites) || 0;\n    const bInvites = parseInt(b.total_invites) || 0;\n    return bInvites - aInvites;\n  });\n\nlet leaderboardText = \"🏆 *Топ учасників змагання* 🏆\\n\\n\";\n\nconst medals = ['🥇', '🥈', '🥉', '4️⃣', '5️⃣', '6️⃣', '7️⃣', '8️⃣'];\n\nfor (let i = 0; i < sortedUsers.length; i++) {\n  const user = sortedUsers[i];\n  const position = i + 1;\n  const medal = medals[i] || `${position}.`;\n  const username = user.username || 'Користувач';\n  const invites = parseInt(user.total_invites) || 0;\n  const rewardIcon = (user.reward_sent === 'true' || user.reward_sent === true) ? ' 🎁' : '';\n  \n  leaderboardText += `${medal} *${username}*${rewardIcon} - ${invites} запрошень\\n`;\n}\n\nif (sortedUsers.length === 0) {\n  leaderboardText = \"📊 Поки що немає даних для лідерборду\";\n} else {\n  leaderboardText += \"\\n🔥 Продовжуйте запрошувати!\";\n}\n\nreturn [{\n  json: {\n    leaderboard: leaderboardText\n  }\n}];"
      },
      "id": "7ba6fb60-83a9-4293-943e-627c9a22dc21",
      "name": "Format Leaderboard",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        112,
        608
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Parse Telegram Message').first().json.chat_id }}",
        "text": "={{ $json.leaderboard }}",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "a6b99dd4-edab-4373-9528-37f89fd06e11",
      "name": "Send Leaderboard",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        352,
        608
      ],
      "webhookId": "163cd269-67f6-4256-a396-a66ec06976a5",
      "credentials": {
        "telegramApi": {
          "id": "aQPWWr9avNBWkLbc",
          "name": "Telegram account 4"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Parse Telegram Message').first().json.chat_id }}",
        "text": "⛔️ Ця команда доступна тільки учасникам змагання.",
        "additionalFields": {}
      },
      "id": "2bb4a76f-fcbe-4954-8ff2-0a80a981c148",
      "name": "Not Participant Top",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -144,
        800
      ],
      "webhookId": "not-participant-top-webhook",
      "credentials": {
        "telegramApi": {
          "id": "aQPWWr9avNBWkLbc",
          "name": "Telegram account 4"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 10
            }
          ]
        }
      },
      "id": "b57d43df-cd6a-410a-9f46-b15fe2ed1ca6",
      "name": "Weekly Leaderboard Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1472,
        928
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "id-1",
              "name": "channelLink",
              "value": "https://t.me/YOUR_CHANNEL",
              "type": "string"
            },
            {
              "id": "id-2",
              "name": "botUsername",
              "value": "YOUR_BOT_USERNAME",
              "type": "string"
            },
            {
              "id": "id-3",
              "name": "spreadsheetId",
              "value": "YOUR_GOOGLE_SHEET_ID",
              "type": "string"
            },
            {
              "id": "id-4",
              "name": "sheetName",
              "value": "Users",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "02b5fd96-4491-4bb4-af9a-133bc5934219",
      "name": "Weekly Config",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1248,
        928
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.spreadsheetId }}"
        },
        "sheetName": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.sheetName }}"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "is_participant",
              "lookupValue": "true"
            }
          ]
        },
        "options": {
          "dataLocationOnSheet": {
            "values": {
              "rangeDefinition": "detectAutomatically"
            }
          }
        }
      },
      "id": "76ca371e-60bb-405a-8800-97265781bc72",
      "name": "Get Weekly Participants",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -1024,
        928
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "FkYqUgEFigk9KtyZ",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Format weekly leaderboard and prepare for sending to each participant\nconst items = $input.all();\n\n// Sort by total_invites descending\nconst sortedUsers = items\n  .map(item => item.json)\n  .filter(user => user.is_participant === 'true' || user.is_participant === true)\n  .sort((a, b) => {\n    const aInvites = parseInt(a.total_invites) || 0;\n    const bInvites = parseInt(b.total_invites) || 0;\n    return bInvites - aInvites;\n  });\n\n// Emojis for positions\nconst medals = ['🥇', '🥈', '🥉', '4️⃣', '5️⃣', '6️⃣', '7️⃣', '8️⃣'];\n\nlet leaderboardText = '🎯 *Тижневий лідерборд змагання*\\n\\n';\n\n// Format each user in the leaderboard\nfor (let i = 0; i < sortedUsers.length; i++) {\n  const user = sortedUsers[i];\n  const position = i + 1;\n  const emoji = medals[i] || `${position}.`;\n  const username = user.username || 'Користувач';\n  const invites = parseInt(user.total_invites) || 0;\n  const rewardIcon = (user.reward_sent === 'true' || user.reward_sent === true) ? ' 🎁' : '';\n  \n  leaderboardText += `${emoji} *${username}*${rewardIcon} - ${invites} запрошень\\n`;\n}\n\nif (sortedUsers.length === 0) {\n  leaderboardText = '📊 Поки що немає даних для лідерборду';\n} else {\n  leaderboardText += '\\n🔥 Продовжуйте запрошувати друзів!';\n}\n\n// Return one item per participant with their chat_id\nreturn sortedUsers.map(user => ({\n  json: {\n    chat_id: user.chat_id,\n    username: user.username,\n    leaderboard: leaderboardText\n  }\n}));"
      },
      "id": "7406983f-5541-4ffe-aca5-a8639f83d272",
      "name": "Format Weekly Leaderboard",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -800,
        928
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "={{ $json.leaderboard }}",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "f41f6291-f643-4006-b324-807c549bc4da",
      "name": "Send Weekly to Each Participant",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -576,
        928
      ],
      "webhookId": "4a8341ff-df7a-4931-b62f-8e512ba8796e",
      "credentials": {
        "telegramApi": {
          "id": "aQPWWr9avNBWkLbc",
          "name": "Telegram account 4"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Bot Trigger": {
      "main": [
        [
          {
            "node": "Workflow Configuration",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Workflow Configuration": {
      "main": [
        [
          {
            "node": "Parse Telegram Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Telegram Message": {
      "main": [
        [
          {
            "node": "Check If Start Command",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check If MyRef Command",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check If Top Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Start Command": {
      "main": [
        [
          {
            "node": "Check User Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check User Exists": {
      "main": [
        [
          {
            "node": "Check If New User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If New User": {
      "main": [
        [
          {
            "node": "Add New User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add New User": {
      "main": [
        [
          {
            "node": "Send Welcome Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Welcome Message": {
      "main": [
        [
          {
            "node": "Check If Has Referrer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Has Referrer": {
      "main": [
        [
          {
            "node": "Get Referrer Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Referrer Data": {
      "main": [
        [
          {
            "node": "Calculate New Invites",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculate New Invites": {
      "main": [
        [
          {
            "node": "Update Referrer Count",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Referrer Count": {
      "main": [
        [
          {
            "node": "Notify Referrer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notify Referrer": {
      "main": [
        [
          {
            "node": "Check If Bonus Eligible",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Bonus Eligible": {
      "main": [
        [
          {
            "node": "Send Bonus Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Bonus Message": {
      "main": [
        [
          {
            "node": "Mark Reward Sent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If MyRef Command": {
      "main": [
        [
          {
            "node": "Check If Participant MyRef",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Participant MyRef": {
      "main": [
        [
          {
            "node": "Get User Stats",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Not Participant MyRef",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get User Stats": {
      "main": [
        [
          {
            "node": "Send My Stats",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Top Command": {
      "main": [
        [
          {
            "node": "Check If Participant Top",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Participant Top": {
      "main": [
        [
          {
            "node": "Get Participants Only",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Not Participant Top",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Participants Only": {
      "main": [
        [
          {
            "node": "Format Leaderboard",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Leaderboard": {
      "main": [
        [
          {
            "node": "Send Leaderboard",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Weekly Leaderboard Trigger": {
      "main": [
        [
          {
            "node": "Weekly Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Weekly Config": {
      "main": [
        [
          {
            "node": "Get Weekly Participants",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Weekly Participants": {
      "main": [
        [
          {
            "node": "Format Weekly Leaderboard",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Weekly Leaderboard": {
      "main": [
        [
          {
            "node": "Send Weekly to Each Participant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "29f0ceff-2bcd-46ce-a747-222ccf326f55",
  "meta": {
    "instanceId": "1a9877cd3aaf0356b9d475f31696a3132f8a82175c0314271b43404fd9539334"
  },
  "id": "ucHCWp4bgoizFFRd",
  "tags": []
}
